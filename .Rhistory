size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
table3 <- churn %>% group_by(Transport,'License' = license) %>% summarise("Values" = n())
table3[c(1,2)] <- lapply(table3[c(1,2)], as.factor)
C <- ggplot(table3,aes(License,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table4 <- churn %>% group_by(Transport,Engineer) %>% summarise("Values" = n())
table4[c(1,2)] <- lapply(table4[c(1,2)], as.factor)
D <- ggplot(data = table4, aes(Engineer,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
grid.arrange(A,B,C,D)
#Boxplot
A <- ggplot(data = churn, aes(as.factor(Transport),Age)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Age vs Transport")
B <- ggplot(data = churn, aes(as.factor(Transport),Work.Exp)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Work Experience vs Transport")
C <- ggplot(data = churn, aes(as.factor(Transport),Salary)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Salary vs Transport")
D <- ggplot(data = churn, aes(as.factor(Transport),Distance)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Distance vs Transport")
grid.arrange(A,B,C,D)
par(mfrow =c(1,1))
#Missing values
any(is.na(churn))
cooksd <- cooks.distance(glm(as.numeric(Transport)~.,data = churn))
plot(cooksd,pch="*", cex =1, main ="Cook's Distance", col ="blue")
abline(h = 4*mean(cooksd, na.rm = TRUE), col = "DarkRED",lwd = 2)
#Treatment using mean imputation method
mydata <- churn[,c(2,5,7:11)]
log.churn <- churn
library(caTools)
set.seed(100)
split <- sample.split(log.churn$Transport,SplitRatio = 2/3)
log.train <- log.churn[split == TRUE,]
log.test <- log.churn[split == FALSE,]
#Feature Scaling
log.train[-1] <- scale(log.train[-1])
churn$Gender <- as.numeric(churn$Gender)
churn$Transport <- factor(churn$Transport, levels = c('Car','2Wheeler', 'Public Transport'), labels = c(1,0,0))
prop.table(table(churn$Transport))*100
churn <- read.csv('Cars.csv')
head(churn)
tail(churn)
str(churn)
summary(churn)
churn <- na.omit(churn)
churn$Gender <- factor(churn$Gender,levels = c('Male','Female'), labels = c(0,1))
churn$Gender <- as.numeric(churn$Gender)
churn$Transport <- factor(churn$Transport, levels = c('Car','2Wheeler', 'Public Transport'), labels = c(1,0,0))
prop.table(table(churn$Transport))*100
#Histogram
par(mfrow = c(3,3))
for(i in names(churn[-c(2,3,4,8,9)])){
hist(churn[,i], xlab = names(churn[i]), col = "red", border = "black", ylab = "Frequency",
main =paste("Histogram of", names(churn[i])),col.main = "darkGreen")
}
par(mfrow = c(1,1))
#Barplot
table1 <- churn %>% group_by(Transport,Gender) %>% summarise("Values" = n())
table1[c(1,2)] <- lapply(table1[c(1,2)], as.factor)
A <- ggplot(table1,aes(Gender,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table2 <- churn %>% group_by(Transport,MBA) %>% summarise("Values" = n())
table2[c(1,2)] <- lapply(table2[c(1,2)], as.factor)
B <- ggplot(data = table2, aes(MBA,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
table3 <- churn %>% group_by(Transport,'License' = license) %>% summarise("Values" = n())
table3[c(1,2)] <- lapply(table3[c(1,2)], as.factor)
C <- ggplot(table3,aes(License,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table4 <- churn %>% group_by(Transport,Engineer) %>% summarise("Values" = n())
table4[c(1,2)] <- lapply(table4[c(1,2)], as.factor)
D <- ggplot(data = table4, aes(Engineer,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
grid.arrange(A,B,C,D)
#Boxplot
A <- ggplot(data = churn, aes(as.factor(Transport),Age)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Age vs Transport")
B <- ggplot(data = churn, aes(as.factor(Transport),Work.Exp)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Work Experience vs Transport")
C <- ggplot(data = churn, aes(as.factor(Transport),Salary)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Salary vs Transport")
D <- ggplot(data = churn, aes(as.factor(Transport),Distance)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Distance vs Transport")
grid.arrange(A,B,C,D)
par(mfrow =c(1,1))
#Missing values
any(is.na(churn))
cooksd <- cooks.distance(glm(as.numeric(Transport)~.,data = churn))
plot(cooksd,pch="*", cex =1, main ="Cook's Distance", col ="blue")
abline(h = 4*mean(cooksd, na.rm = TRUE), col = "DarkRED",lwd = 2)
#Multicollinearity
cor <- cor(churn[-9])
cor
#Multicollinearity
cor <- cor(as.numeric(churn))
#Multicollinearity
cor <- cor(churn[-9])
corrplot.mixed(cor,lower = "number", upper = "pie")
#Variance Inflation Factor
vif(glm(as.numeric(Transport)~., data = churn))
#1. Linear relationship b/w log odds and independent variables
model <- glm(as.numeric(Transport)~., data = churn, family = binomial)
prop.table(table(churn$Transport))*100
#1. Linear relationship b/w log odds and independent variables
model <- glm(as.numeric(Transport)~., data = churn)
prob <- predict(model, type = "response", churn)
mydata <- churn
View(mydata)
mydata[,c(1,5,6,7)] <- lapply(mydata[,c(1,5,6,7)], as.factor)
mydata<- mydata %>% select_if(is.numeric)
View(mydata)
predictors <- colnames(mydata)
# Bind the logit and tidying the data for plot
mydata <- mydata %>%
mutate(logit = log(prob/(1-prob))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
ggplot(mydata, aes(logit, predictor.value))+
geom_point(size = 0.5, alpha = 0.5) +
geom_smooth(method = "loess") +
theme_bw() +
facet_wrap(~predictors, scales = "free_y")
setwd("C:/Users/ragha/Desktop/Raghav/Great Learning/Projects/Project 5")
library(readxl)
library(corrplot)
library(class)
library(gridExtra)
library(tidyverse)
library(car)
library(class)
library(caret)
library(ROCR)
library(ineq)
library(dplyr)
library(broom)
library(caTools)
churn <- read.csv('Cars.csv')
head(churn)
tail(churn)
str(churn)
summary(churn)
churn <- na.omit(churn)
churn$Gender <- factor(churn$Gender,levels = c('Male','Female'), labels = c(0,1))
churn$Gender <- as.numeric(churn$Gender)
churn$Transport <- factor(churn$Transport, levels = c('Car','2Wheeler', 'Public Transport'), labels = c(1,0,0))
prop.table(table(churn$Transport))*100
#Histogram
par(mfrow = c(3,3))
for(i in names(churn[-c(2,3,4,8,9)])){
hist(churn[,i], xlab = names(churn[i]), col = "red", border = "black", ylab = "Frequency",
main =paste("Histogram of", names(churn[i])),col.main = "darkGreen")
}
par(mfrow = c(1,1))
#Barplot
table1 <- churn %>% group_by(Transport,Gender) %>% summarise("Values" = n())
table1[c(1,2)] <- lapply(table1[c(1,2)], as.factor)
A <- ggplot(table1,aes(Gender,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table2 <- churn %>% group_by(Transport,MBA) %>% summarise("Values" = n())
table2[c(1,2)] <- lapply(table2[c(1,2)], as.factor)
B <- ggplot(data = table2, aes(MBA,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
table3 <- churn %>% group_by(Transport,'License' = license) %>% summarise("Values" = n())
table3[c(1,2)] <- lapply(table3[c(1,2)], as.factor)
C <- ggplot(table3,aes(License,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table4 <- churn %>% group_by(Transport,Engineer) %>% summarise("Values" = n())
table4[c(1,2)] <- lapply(table4[c(1,2)], as.factor)
D <- ggplot(data = table4, aes(Engineer,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
grid.arrange(A,B,C,D)
#Boxplot
A <- ggplot(data = churn, aes(as.factor(Transport),Age)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Age vs Transport")
B <- ggplot(data = churn, aes(as.factor(Transport),Work.Exp)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Work Experience vs Transport")
C <- ggplot(data = churn, aes(as.factor(Transport),Salary)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Salary vs Transport")
D <- ggplot(data = churn, aes(as.factor(Transport),Distance)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Distance vs Transport")
grid.arrange(A,B,C,D)
par(mfrow =c(1,1))
#Missing values
any(is.na(churn))
#Outlier Detection and Treatment
#Cooks distance for outliers detection
cooksd <- cooks.distance(glm(as.numeric(Transport)~.,data = churn))
plot(cooksd,pch="*", cex =1, main ="Cook's Distance", col ="blue")
abline(h = 4*mean(cooksd, na.rm = TRUE), col = "DarkRED",lwd = 2)
#Any value above red line  indicates influential values or outliers
#Treatment using mean imputation method
mydata <- churn[,c(2,5,7:11)]
Outliers<- mydata[1:50,]
for(i in c(1:7)) {
Outliers[,i] <- NA
Box <-boxplot(mydata[,i],plot =F)$out
if (length(Box)>0){
Outliers[1:length(Box),i] <- Box
}
mydata[which(mydata[,i] %in% Outliers[,i]),i] <- round(mean(mydata[-which(mydata[,i] %in% Outliers[,i]),i]))
}
mydata <- cbind.data.frame(churn[,c(1,3,4,6)],mydata)
churn <- mydata
#Multicollinearity
cor <- cor(churn[-9])
corrplot.mixed(cor,lower = "number", upper = "pie")
#Variance Inflation Factor
vif(glm(as.numeric(Transport)~., data = churn))
vif(glm(Churn~.-DataUsage, data = churn))
vif(glm(Churn~.-DataUsage - MonthlyCharge, data = churn))
#DataUsage and MonthlyCharge are removed from the  models
#-------------------------------------------------------------------
#1. Logistic Regression
#Testing assumptions of logistic regression
#1. Linear relationship b/w log odds and independent variables
model <- glm(as.numeric(Transport)~., data = churn)
prob <- predict(model, type = "response", churn)
mydata <- churn
mydata[,-c(1,5,6,7)] <- lapply(mydata[,-c(1,5,6,7)], as.factor)
mydata<- mydata %>% select_if(is.numeric)
View(mydata)
predictors <- colnames(mydata)
# Bind the logit and tidying the data for plot
mydata <- mydata %>%
mutate(logit = log(prob/(1-prob))) %>%
gather(key = "predictors", value = "predictor.value", -logit)
prob
prob <- predict(model,newdata = churn, type = 'prob')
as.numeric(Transport)
log.churn <- churn
library(caTools)
set.seed(100)
split <- sample.split(log.churn$Transport,SplitRatio = 2/3)
log.train <- log.churn[split == TRUE,]
log.test <- log.churn[split == FALSE,]
#Feature Scaling
log.train[-1] <- scale(log.train[-1])
#Feature Scaling
log.train[-9] <- scale(log.train[-9])
log.test[-9] <- scale(log.test[-9])
#Stepwise logistic regression with 10 - fold cross validation
train.control <- trainControl(method = "cv", number = 10)
model <- train(Transport~., data = log.train, method = "glm",trControl = train.control,family =binomial())
summary(model)
plot(varImp(model), main = "Important Variables")
log.train$prob.pred <- predict(model,newdata = log.train, type = "prob")[,"1"]
log.train$pred.class <- predict(model,log.train, type = "raw")
log.cm.train <-confusionMatrix(as.factor(log.train$Churn),as.factor(log.train$pred.class))
log.cm.train <-confusionMatrix(as.factor(log.train$Transport),as.factor(log.train$pred.class))
log.cm.train
knn.churn <- churn
#Splitting of dataset
set.seed(100)
split <- sample.split(knn.churn$Churn,SplitRatio = 2/3)
split <- sample.split(knn.churn$Transport,SplitRatio = 2/3)
knn.train <- knn.churn[split == TRUE,]
knn.test <- knn.churn[split == FALSE,]
#Feature Scaling
knn.train[-9] <- scale(knn.train[-9])
knn.test[-9] <- scale(knn.test[-9])
#Model Formation
control <- trainControl(method = 'cv', number = 10)
kn <- train(Transport ~ .,
method     = "knn",
tuneGrid   = expand.grid(k = 1:20),
trControl  = control,
metric     = "Accuracy",
data       = knn.train)
kn
plot(kn,main= "KNN")
plot(varImp(kn),main = "Important Variables")
knn.train$pred.class <- predict(kn,newdata = knn.train,type = "raw")
knn.train$pred.prob <- predict(kn, newdata = knn.train, type ="prob")[,"1"]
confusionMatrix(as.factor(knn.train$Churn),knn.train$pred.class)
confusionMatrix(as.factor(knn.train$Transport),knn.train$pred.class)
knn.test$pred.class <- predict(kn,newdata = knn.test, type = "raw")
knn.test$pred.prob <-  predict(kn, newdata = knn.test, type = "prob")[,"1"]
knn.cm.test <-confusionMatrix(as.factor(knn.test$Churn),knn.test$pred.class)
knn.cm.test <-confusionMatrix(as.factor(knn.test$Transport),knn.test$pred.class)
knn.cm.test
nb.churn <- churn
split <- sample.split(nb.churn$Transport,SplitRatio = 2/3)
nb.train <- nb.churn[split == TRUE,]
nb.test <- nb.churn[split == FALSE,]
#Model Formation
control <- trainControl(method = 'cv', number = 10)
search_grid <- expand.grid(
usekernel = c(TRUE, FALSE),
fL = 0:5,
adjust = seq(0, 5, by = 1)
)
nb <- train(
x = nb.train[-9],
y = as.factor(nb.train$Churn),
method = "nb",
trControl = control,
tuneGrid = search_grid
)
nb
#Model Formation
control <- trainControl(method = 'cv', number = 10)
search_grid <- expand.grid(
usekernel = c(TRUE, FALSE),
fL = 0:5,
adjust = seq(0, 5, by = 1)
)
nb <- train(
x = nb.train[-9],
y = as.factor(nb.train$Transport),
method = "nb",
trControl = control,
tuneGrid = search_grid
)
nb
nb$results %>% top_n(5, wt = Accuracy) %>% arrange(desc(Accuracy))
plot(nb)
plot(varImp(nb), main = "Important Variable")
nb.train$pred.class <- predict(nb,newdata = nb.train,type = "raw")
nb.train$pred.prob <- predict(nb, newdata = nb.train, type ="prob")[,"1"]
confusionMatrix(as.factor(nb.train$Transport),nb.train$pred.class)
nb.test$pred.class <- predict(nb,newdata = nb.test, type = "raw")
nb.test$pred.prob <-  predict(nb, newdata = nb.test, type = "prob")[,"1"]
nb.cm.test <-confusionMatrix(as.factor(nb.test$Transport),nb.test$pred.class)
nb.cm.test
setwd("C:/Users/ragha/Desktop/Raghav/Great Learning/Projects/Project 5")
library(readxl)
library(corrplot)
library(class)
library(gridExtra)
library(tidyverse)
library(car)
library(class)
library(caret)
churn <- read.csv('Cars.csv')
View(churn)
head(churn)
tail(churn)
str(churn)
summary(churn)
churn <- na.omit(churn)
churn$Gender <- factor(churn$Gender,levels = c('Male','Female'), labels = c(0,1))
churn$Gender <- as.numeric(churn$Gender)
churn$Transport <- factor(churn$Transport, levels = c('Car','2Wheeler', 'Public Transport'), labels = c(1,0,0))
prop.table(table(churn$Transport))*100
#Histogram
par(mfrow = c(3,3))
for(i in names(churn[-c(2,3,4,8,9)])){
hist(churn[,i], xlab = names(churn[i]), col = "red", border = "black", ylab = "Frequency",
main =paste("Histogram of", names(churn[i])),col.main = "darkGreen")
}
par(mfrow = c(1,1))
#Barplot
table1 <- churn %>% group_by(Transport,Gender) %>% summarise("Values" = n())
table1[c(1,2)] <- lapply(table1[c(1,2)], as.factor)
A <- ggplot(table1,aes(Gender,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table2 <- churn %>% group_by(Transport,MBA) %>% summarise("Values" = n())
table2[c(1,2)] <- lapply(table2[c(1,2)], as.factor)
B <- ggplot(data = table2, aes(MBA,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
table3 <- churn %>% group_by(Transport,'License' = license) %>% summarise("Values" = n())
table3[c(1,2)] <- lapply(table3[c(1,2)], as.factor)
C <- ggplot(table3,aes(License,Values,fill = Transport)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table4 <- churn %>% group_by(Transport,Engineer) %>% summarise("Values" = n())
table4[c(1,2)] <- lapply(table4[c(1,2)], as.factor)
D <- ggplot(data = table4, aes(Engineer,Values, fill = Transport)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
grid.arrange(A,B,C,D)
#Boxplot
A <- ggplot(data = churn, aes(as.factor(Transport),Age)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Age vs Transport")
B <- ggplot(data = churn, aes(as.factor(Transport),Work.Exp)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Work Experience vs Transport")
C <- ggplot(data = churn, aes(as.factor(Transport),Salary)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Salary vs Transport")
D <- ggplot(data = churn, aes(as.factor(Transport),Distance)) + geom_boxplot(color = c("Red","Blue")) + xlab("Transport") + ggtitle("Distance vs Transport")
grid.arrange(A,B,C,D)
par(mfrow =c(1,1))
#Missing values
any(is.na(churn))
cooksd <- cooks.distance(glm(as.numeric(Transport)~.,data = churn))
plot(cooksd,pch="*", cex =1, main ="Cook's Distance", col ="blue")
abline(h = 4*mean(cooksd, na.rm = TRUE), col = "DarkRED",lwd = 2)
#Treatment using mean imputation method
mydata <- churn[,c(2,5,7:11)]
Outliers<- mydata[1:50,]
#Multicollinearity
cor <- cor(churn[-9])
corrplot.mixed(cor,lower = "number", upper = "pie")
#1. Linear relationship b/w log odds and independent variables
model <- glm(as.numeric(Transport)~., data = churn)
prob <- predict(model,newdata = churn, type = 'prob')
setwd("C:/Users/ragha/Desktop/Raghav/Great Learning/Projects/Project 4")
library(readxl)
library(corrplot)
library(class)
library(gridExtra)
library(tidyverse)
library(car)
library(class)
library(caret)
library(ROCR)
library(ineq)
library(dplyr)
library(broom)
library(caTools)
churn <- read_excel("Cellphone-1.xlsx", sheet = 2)
churn <- as.data.frame(churn)
head(churn)
tail(churn)
str(churn)
summary(churn)
prop.table(table(churn$Churn))*100
#Histogram
par(mfrow = c(3,3))
for(i in names(churn[-c(1,3,4)])){
hist(churn[,i], xlab = names(churn[i]), col = "red", border = "black", ylab = "Frequency",
main =paste("Histogram of", names(churn[i])),col.main = "darkGreen")
}
par(mfrow = c(1,1))
#Barplot
table1 <- churn %>% group_by(Churn,ContractRenewal) %>% summarise("Values" = n())
table1[c(1,2)] <- lapply(table1[c(1,2)], as.factor)
A <- ggplot(table1,aes(ContractRenewal,Values,fill = Churn)) + geom_bar(stat = "identity",color = "Black", position = 'dodge')+
geom_text(aes(label = Values),
size = 3,
color = "black",
position = position_dodge(width = 0.9),
vjust = -0.2)
table2 <- churn %>% group_by(Churn,DataPlan) %>% summarise("Values" = n())
table2[c(1,2)] <- lapply(table2[c(1,2)], as.factor)
B <- ggplot(data = table2, aes(DataPlan,Values, fill = Churn)) + geom_bar(stat = 'identity', position = 'dodge',color = "Black")+
geom_text(aes(label = Values),
size = 3,
vjust = -0.2,
position = position_dodge(width = 0.9))
grid.arrange(A,B)
#Boxplot
A <- ggplot(data = churn, aes(as.factor(Churn),AccountWeeks)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("No. of active account weeks vs Churn")
B <- ggplot(data = churn, aes(as.factor(Churn),DataUsage)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Data Usage vs Churn")
C <- ggplot(data = churn, aes(as.factor(Churn),CustServCalls)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Customer Service Calls vs Churn")
D <- ggplot(data = churn, aes(as.factor(Churn),DayMins)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Average daytime minutes vs Churn")
E <- ggplot(data = churn, aes(as.factor(Churn),DayCalls)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Average daytime calls vs Churn")
G <- ggplot(data = churn, aes(as.factor(Churn),MonthlyCharge)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Monthly Charge vs Churn")
H <- ggplot(data = churn, aes(as.factor(Churn),OverageFee)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Overage fee vs Churn")
I <- ggplot(data = churn, aes(as.factor(Churn),RoamMins)) + geom_boxplot(color = c("Red","Blue")) + xlab("Churn") + ggtitle("Roaming Minutes vs Churn")
grid.arrange(A,B,C,D,E,G,H,I)
par(mfrow =c(1,1))
#Missing values
any(is.na(churn))
#Outlier Detection and Treatment
#Cooks distance for outliers detection
cooksd <- cooks.distance(glm(Churn~.,data = churn))
plot(cooksd,pch="*", cex =1, main ="Cook's Distance", col ="blue")
abline(h = 4*mean(cooksd, na.rm = TRUE), col = "DarkRED",lwd = 2)
#Any value above red line  indicates influential values or outliers
#Treatment using mean imputation method
mydata <- churn[,c(2,5,7:11)]
Outliers<- mydata[1:50,]
for(i in c(1:7)) {
Outliers[,i] <- NA
Box <-boxplot(mydata[,i],plot =F)$out
if (length(Box)>0){
Outliers[1:length(Box),i] <- Box
}
mydata[which(mydata[,i] %in% Outliers[,i]),i] <- round(mean(mydata[-which(mydata[,i] %in% Outliers[,i]),i]))
}
mydata <- cbind.data.frame(churn[,c(1,3,4,6)],mydata)
churn <- mydata
#Multicollinearity
cor(churn)
corrplot.mixed(cor(churn),lower = "number", upper = "pie")
#Variance Inflation Factor
vif(glm(Churn~., data = churn))
vif(glm(Churn~.-DataUsage, data = churn))
vif(glm(Churn~.-DataUsage - MonthlyCharge, data = churn))
